<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="62a849cd-df42-480d-8ff3-1d1170b41607" name="Changes" comment="feat: Implement GTFS data processing and GeoJSON generation with enhanced stop_id mapping&#10;&#10;- Added functionality to fetch and extract GTFS data from the Bucharest region.&#10;- Implemented merging of `stop_times.txt`, `trips.txt`, `routes.txt`, and `stops.txt` to generate a comprehensive dataset.&#10;- Enhanced the GeoJSON generation process with custom logic to map `stop_id` from `stops.txt` and replace `Cod Statie` for matching stops.&#10;- Implemented logic to match stops based on the first 5 characters of `stop_name`, addressing variations in naming conventions.&#10;- Ensured correct handling of stops with identical `stop_name` but different `stop_code`, preserving unique coordinates.&#10;- Scheduled a daily task to refresh the data and regenerate the GeoJSON.&#10;- Fixed issues related to duplications and incorrect stop mappings, ensuring accurate representation in the output.&#10;&#10;This commit significantly improves the reliability and accuracy of the stop data mapping and GeoJSON generation process.">
      <change beforePath="$PROJECT_DIR$/../leaflet_map/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/../leaflet_map/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../leaflet_map/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/../leaflet_map/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../leaflet_map/src/app/leaflet-map/leaflet-map.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../leaflet_map/src/app/leaflet-map/leaflet-map.component.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
    <option name="RESET_MODE" value="HARD" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;matteiii22&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/matteiii22/Angular_Maps.git&quot;,
    &quot;accountId&quot;: &quot;64e24708-57c1-4f41-be06-1c4b9320e669&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2jduiStnXzJOn0rYv1klXcQBp4l" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python.get_capat.executor": "Run",
    "Python.gtfs_routes.executor": "Run",
    "Python.gtfs_tool.executor": "Run",
    "Python.txt_to_xlsx.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "priv__work__matei",
    "last_opened_file_path": "C:/Users/matei/PycharmProjects/excel generate",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager">
    <configuration name="GTFS TOOL" type="PythonConfigurationType" factoryName="Python">
      <module name="GTFS TOOL" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/gtfs_tool.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-d68999036c7f-b11f5e8da5ad-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-233.14475.56" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="62a849cd-df42-480d-8ff3-1d1170b41607" name="Changes" comment="" />
      <created>1721729402841</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1721729402841</updated>
      <workItem from="1721729403815" duration="737000" />
      <workItem from="1722234174792" duration="3216000" />
      <workItem from="1722238908350" duration="10901000" />
      <workItem from="1722256048937" duration="21000" />
      <workItem from="1722256082677" duration="13709000" />
      <workItem from="1722319626762" duration="6130000" />
      <workItem from="1722418309974" duration="2416000" />
      <workItem from="1723436806378" duration="1791000" />
      <workItem from="1723439758874" duration="1000" />
      <workItem from="1723444585181" duration="12000" />
      <workItem from="1723450034713" duration="1609000" />
      <workItem from="1723619969311" duration="136000" />
      <workItem from="1723627267956" duration="1124000" />
      <workItem from="1724043254726" duration="780000" />
      <workItem from="1724061949954" duration="23000" />
      <workItem from="1724238315445" duration="3432000" />
      <workItem from="1724663407971" duration="572000" />
      <workItem from="1724669076497" duration="4017000" />
      <workItem from="1724996391484" duration="1247000" />
      <workItem from="1726555029816" duration="715000" />
      <workItem from="1726571140666" duration="6187000" />
      <workItem from="1728629037699" duration="26000" />
    </task>
    <task id="LOCAL-00001" summary="Add script to fetch, extract, and process GTFS data into GeoJSON format&#10;&#10;- Fetch GTFS zip file and extract stops.txt and stop_times.txt&#10;- Merge stops and stop_times data on stop_id&#10;- Clean data by removing rows with NaN values for stop_lat and stop_lon&#10;- Extract numeric part of trip_id and determine Mod Transp (TRAM or BUS)&#10;- Generate GeoJSON features with properties: Linia/sens, Statie, Artera, Mod Transp&#10;- Write GeoJSON file with each feature on a new line&#10;- Add progress bar for data processing&#10;- Schedule daily data fetching and processing at 2 AM&#10;- Handle exceptions and log errors&#10;- Set up Flask app for serving the processed data">
      <option name="closed" value="true" />
      <created>1722242627264</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1722242627264</updated>
    </task>
    <task id="LOCAL-00002" summary="Add script to fetch, extract, and process GTFS data into GeoJSON format&#10;&#10;- Fetch GTFS zip file and extract stops.txt and stop_times.txt&#10;- Merge stops and stop_times data on stop_id&#10;- Clean data by removing rows with NaN values for stop_lat and stop_lon&#10;- Extract numeric part of trip_id and determine Mod Transp (TRAM or BUS)&#10;- Generate GeoJSON features with properties: Linia/sens, Statie, Artera, Mod Transp&#10;- Write GeoJSON file with each feature on a new line&#10;- Add progress bar for data processing&#10;- Schedule daily data fetching and processing at 2 AM&#10;- Handle exceptions and log errors&#10;- Set up Flask app for serving the processed data&#10;&#10;&#10;&#10;GTFS TOOL FULLY WORKING FOR STATIONS!">
      <option name="closed" value="true" />
      <created>1722257110433</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1722257110433</updated>
    </task>
    <task id="LOCAL-00003" summary="Add script to fetch, extract, and process GTFS data into GeoJSON format&#10;&#10;- Fetch GTFS zip file and extract stops.txt and stop_times.txt&#10;- Merge stops and stop_times data on stop_id&#10;- Clean data by removing rows with NaN values for stop_lat and stop_lon&#10;- Extract numeric part of trip_id and determine Mod Transp (TRAM or BUS)&#10;- Generate GeoJSON features with properties: Linia/sens, Statie, Artera, Mod Transp&#10;- Write GeoJSON file with each feature on a new line&#10;- Add progress bar for data processing&#10;- Schedule daily data fetching and processing at 2 AM&#10;- Handle exceptions and log errors&#10;- Set up Flask app for serving the processed data&#10;&#10;&#10;&#10;GTFS TOOL FULLY WORKING FOR STATIONS!">
      <option name="closed" value="true" />
      <created>1722257877512</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1722257877512</updated>
    </task>
    <task id="LOCAL-00004" summary="Add script to fetch, extract, and process GTFS data into GeoJSON format&#10;&#10;- Fetch GTFS zip file and extract stops.txt and stop_times.txt&#10;- Merge stops and stop_times data on stop_id&#10;- Clean data by removing rows with NaN values for stop_lat and stop_lon&#10;- Extract numeric part of trip_id and determine Mod Transp (TRAM or BUS)&#10;- Generate GeoJSON features with properties: Linia/sens, Statie, Artera, Mod Transp&#10;- Write GeoJSON file with each feature on a new line&#10;- Add progress bar for data processing&#10;- Schedule daily data fetching and processing at 2 AM&#10;- Handle exceptions and log errors&#10;- Set up Flask app for serving the processed data&#10;&#10;&#10;&#10;GTFS TOOL FULLY WORKING FOR STATIONS!">
      <option name="closed" value="true" />
      <created>1722337191552</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1722337191552</updated>
    </task>
    <task id="LOCAL-00005" summary="feat: Enhance GTFS data processing for improved GeoJSON accuracy and performance&#10;&#10;* **Filtering:**&#10;    * Implement stricter duplicate removal based on route_id, stop_id, and coordinates&#10;    * Pre-filter by unique trip_ids to reduce data size&#10;    * Use spatial indexing to efficiently find nearby stops for comparison&#10;* **Encoding:**&#10;    * Handle potential encoding errors (e.g., latin-1) in GTFS files&#10;* **Error Handling:**&#10;    * Add more robust error handling for unexpected issues">
      <option name="closed" value="true" />
      <created>1722341588378</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1722341588378</updated>
    </task>
    <task id="LOCAL-00006" summary="&quot;Route generation now works&quot;">
      <option name="closed" value="true" />
      <created>1723439968758</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1723439968758</updated>
    </task>
    <task id="LOCAL-00007" summary="Fully functional now it has the routes from the gtfs to do the correct lines">
      <option name="closed" value="true" />
      <created>1723445811541</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1723445811541</updated>
    </task>
    <task id="LOCAL-00008" summary="Fully functional now it has the routes from the gtfs to do the correct lines">
      <option name="closed" value="true" />
      <created>1723448475125</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1723448475125</updated>
    </task>
    <task id="LOCAL-00009" summary="now we have a convertor from txt to xlsx">
      <option name="closed" value="true" />
      <created>1723450447670</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1723450447670</updated>
    </task>
    <task id="LOCAL-00010" summary="Good now we have linii Comune working">
      <option name="closed" value="true" />
      <created>1723628290824</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1723628290825</updated>
    </task>
    <task id="LOCAL-00011" summary="feat: Implement GTFS data processing and GeoJSON generation with enhanced stop_id mapping&#10;&#10;- Added functionality to fetch and extract GTFS data from the Bucharest region.&#10;- Implemented merging of `stop_times.txt`, `trips.txt`, `routes.txt`, and `stops.txt` to generate a comprehensive dataset.&#10;- Enhanced the GeoJSON generation process with custom logic to map `stop_id` from `stops.txt` and replace `Cod Statie` for matching stops.&#10;- Implemented logic to match stops based on the first 5 characters of `stop_name`, addressing variations in naming conventions.&#10;- Ensured correct handling of stops with identical `stop_name` but different `stop_code`, preserving unique coordinates.&#10;- Scheduled a daily task to refresh the data and regenerate the GeoJSON.&#10;- Fixed issues related to duplications and incorrect stop mappings, ensuring accurate representation in the output.&#10;&#10;This commit significantly improves the reliability and accuracy of the stop data mapping and GeoJSON generation process.">
      <option name="closed" value="true" />
      <created>1724049758539</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1724049758539</updated>
    </task>
    <option name="localTasksCounter" value="12" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Add script to fetch, extract, and process GTFS data into GeoJSON format&#10;&#10;- Fetch GTFS zip file and extract stops.txt and stop_times.txt&#10;- Merge stops and stop_times data on stop_id&#10;- Clean data by removing rows with NaN values for stop_lat and stop_lon&#10;- Extract numeric part of trip_id and determine Mod Transp (TRAM or BUS)&#10;- Generate GeoJSON features with properties: Linia/sens, Statie, Artera, Mod Transp&#10;- Write GeoJSON file with each feature on a new line&#10;- Add progress bar for data processing&#10;- Schedule daily data fetching and processing at 2 AM&#10;- Handle exceptions and log errors&#10;- Set up Flask app for serving the processed data" />
    <MESSAGE value="Add script to fetch, extract, and process GTFS data into GeoJSON format&#10;&#10;- Fetch GTFS zip file and extract stops.txt and stop_times.txt&#10;- Merge stops and stop_times data on stop_id&#10;- Clean data by removing rows with NaN values for stop_lat and stop_lon&#10;- Extract numeric part of trip_id and determine Mod Transp (TRAM or BUS)&#10;- Generate GeoJSON features with properties: Linia/sens, Statie, Artera, Mod Transp&#10;- Write GeoJSON file with each feature on a new line&#10;- Add progress bar for data processing&#10;- Schedule daily data fetching and processing at 2 AM&#10;- Handle exceptions and log errors&#10;- Set up Flask app for serving the processed data&#10;&#10;&#10;&#10;GTFS TOOL FULLY WORKING FOR STATIONS!" />
    <MESSAGE value="feat: Enhance GTFS data processing for improved GeoJSON accuracy and performance&#10;&#10;* **Filtering:**&#10;    * Implement stricter duplicate removal based on route_id, stop_id, and coordinates&#10;    * Pre-filter by unique trip_ids to reduce data size&#10;    * Use spatial indexing to efficiently find nearby stops for comparison&#10;* **Encoding:**&#10;    * Handle potential encoding errors (e.g., latin-1) in GTFS files&#10;* **Error Handling:**&#10;    * Add more robust error handling for unexpected issues" />
    <MESSAGE value="&quot;Route generation now works&quot;" />
    <MESSAGE value="Fully functional now it has the routes from the gtfs to do the correct lines" />
    <MESSAGE value="now we have a convertor from txt to xlsx" />
    <MESSAGE value="Good now we have linii Comune working" />
    <MESSAGE value="feat: Implement GTFS data processing and GeoJSON generation with enhanced stop_id mapping&#10;&#10;- Added functionality to fetch and extract GTFS data from the Bucharest region.&#10;- Implemented merging of `stop_times.txt`, `trips.txt`, `routes.txt`, and `stops.txt` to generate a comprehensive dataset.&#10;- Enhanced the GeoJSON generation process with custom logic to map `stop_id` from `stops.txt` and replace `Cod Statie` for matching stops.&#10;- Implemented logic to match stops based on the first 5 characters of `stop_name`, addressing variations in naming conventions.&#10;- Ensured correct handling of stops with identical `stop_name` but different `stop_code`, preserving unique coordinates.&#10;- Scheduled a daily task to refresh the data and regenerate the GeoJSON.&#10;- Fixed issues related to duplications and incorrect stop mappings, ensuring accurate representation in the output.&#10;&#10;This commit significantly improves the reliability and accuracy of the stop data mapping and GeoJSON generation process." />
    <option name="LAST_COMMIT_MESSAGE" value="feat: Implement GTFS data processing and GeoJSON generation with enhanced stop_id mapping&#10;&#10;- Added functionality to fetch and extract GTFS data from the Bucharest region.&#10;- Implemented merging of `stop_times.txt`, `trips.txt`, `routes.txt`, and `stops.txt` to generate a comprehensive dataset.&#10;- Enhanced the GeoJSON generation process with custom logic to map `stop_id` from `stops.txt` and replace `Cod Statie` for matching stops.&#10;- Implemented logic to match stops based on the first 5 characters of `stop_name`, addressing variations in naming conventions.&#10;- Ensured correct handling of stops with identical `stop_name` but different `stop_code`, preserving unique coordinates.&#10;- Scheduled a daily task to refresh the data and regenerate the GeoJSON.&#10;- Fixed issues related to duplications and incorrect stop mappings, ensuring accurate representation in the output.&#10;&#10;This commit significantly improves the reliability and accuracy of the stop data mapping and GeoJSON generation process." />
  </component>
  <component name="XDebuggerManager">
    <watches-manager>
      <configuration name="PythonConfigurationType">
        <watch expression="gdf" />
        <watch expression="merged_df" />
      </configuration>
    </watches-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/GTFS_TOOL$gtfs_routes.coverage" NAME="gtfs_routes Coverage Results" MODIFIED="1723445694593" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/Statii_Transport_Public_Suprafata_geojson$gtfs_tool.coverage" NAME="gtfs_tool Coverage Results" MODIFIED="1726806969534" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/Statii_Transport_Public_Suprafata_geojson$txt_to_xlsx.coverage" NAME="txt_to_xlsx Coverage Results" MODIFIED="1724996407009" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/gtfs_data_routes_geojson$gtfs_tool.coverage" NAME="gtfs_tool Coverage Results" MODIFIED="1723628133223" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/GTFS_TOOL$gtfs_tool.coverage" NAME="gtfs_tool Coverage Results" MODIFIED="1723448235136" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/gtfs_data_routes_geojson$txt_to_xlsx.coverage" NAME="txt_to_xlsx Coverage Results" MODIFIED="1723450279766" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/Statii_Transport_Public_Suprafata_geojson$get_capat.coverage" NAME="get_capat Coverage Results" MODIFIED="1724242018623" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/gtfs_data" />
    <SUITE FILE_PATH="coverage/Statii_Transport_Public_Suprafata_geojson$gtfs_routes.coverage" NAME="gtfs_routes Coverage Results" MODIFIED="1726808288990" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>